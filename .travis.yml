language: elixir
# `elixir: '1.6'` tracks the latest Elixir 1.6.x release.
# Unfortunately, `otp_release: '20.3'` does not work similarly.
elixir: '1.6'
otp_release: '20.3.8'

script:
  # This is basically `mix test` with coverage enabled.
  - mix coveralls.json
  - mix format --check-formatted
  # This will mention FIXME and TODO comments without failing, any other issue
  # fails the build.
  - mix credo

after_success:
  - bash <(curl -s https://codecov.io/bash)

jobs:
  include:
    - {} # Use 'default' Elixir/OTP versions
    - otp_release: '21.0'

    - env:
        - RUN_DIALYZER=1
      cache:
        directories:
          - $HOME/.mix
          - $HOME/.pltcache

      before_script:
        - mix compile
        # Juggle cached PLTs.
        - mkdir -p ~/.pltcache
        - cp ~/.pltcache/*-dev.plt _build/dev/ || true
        - travis_wait mix dialyzer --plt
        - cp _build/dev/*-dev.plt ~/.pltcache/
        # Now that we've done the PLT dance, we can run dialyzer.

      script:
        - mix dialyzer --halt-exit-status

    - env:
        - BAZEL_VERSION=0.14.1
        - PROTOC_VERSION=3.6.0
        - PROTOBUF_ELIXIR_VERSION=0.5.4

      install:
        # Install Bazel
        - curl -fL "https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh" > bazel-installer.sh
        - bash bazel-installer.sh --user
        # Install protoc
        - curl -fL https://github.com/google/protobuf/releases/download/v$PROTOC_VERSION/protoc-$PROTOC_VERSION-linux-x86_64.zip > protoc.zip
        - mkdir ~/protoc && unzip -d ~/protoc protoc.zip && ln -s ~/protoc/bin/protoc ~/bin/protoc
        # Install protoc-gen-elixir
        - mix local.hex --force && mix escript.install --force hex protobuf "$PROTOBUF_ELIXIR_VERSION"
        # Check everything is available
        - export PATH="$HOME/.mix/escripts:$PATH"
        - echo "Installed Bazel ($(which bazel)), protoc ($(which protoc)), protobuf-elixir ($(which protoc-gen-elixir))"
      script:
        - ./generate_protos.sh
        - if [[ -n "$(git status -s lib/)" ]]; then
            git status lib/; git diff -- lib/ | head -n 500; false;
          fi

    - sudo: required
      group: trusty_latest
      services: docker
      language: python
      elixir: ~
      otp_release: ~

      env:
        - IMAGE_NAME=praekeltfoundation/relay
        - REGISTRY_USER=praekeltorgdeploy
        - secure: "QShzxge3nA5z8hZXyYR9CqHjLTFipDAwH4WdXe4KykXH33CfW2y9QeEK3rXGf3gmE5BYBMd5XL08sIpQegrk3apQpWKjwzV+HA6ReMFR+KgIOUrQey6ysNPOQBKhrpRsH1mWwLYWz1KkByHT0KOM6+2DnzOYmrVgLXNSNQavNk0W80AjpuqruQx65vaYaRJW4hOFoXtf9+ZwxYyD4U5gROSLY4/9KzGjYi6P4GWQj3fvK9tJ/mQXE2Gqm+1LnQsAR8vuSduQKmyeEWdImys8UeXOprkug8A/WPx+kOXL06QeQPVlcNaf8bnbiJT562j4v7qkdgBwSJLJXx+eWZg5y+2F+ajwG8F6TbXok4ySSCN/k5k4kBqvX5VaXUbetboATd80TlSJjfrS67OgGdCM4b9isOFbR0yYcVU5Q+K/QaGIsORzP71ddz1wPzc7752gyeKZavHtAOJ5ZlwVPO7Jf7TsKjn7xk+XhXx72arI7/gGNjPbHHIg/APXTTgo57lLJkzuzwIlxfn05QSOMWsCzd7CKmijCiJxeXH5SLDgKJOt+88P1A4JZi1cFsj/YMkZmSmjN0ScIXJzQt5wn43ZskQ0VboUEPwaNSUhPjQlqkj7kooIplzXO8D9KwlCm8V+JhGmVBhcfFh36Mif1huDro90U3SxDKbYu82ddsCuz3Y="

      script: docker build -t "$IMAGE_NAME" .
      after_script: docker images

      before_deploy:
        - pip install docker-ci-deploy==0.3.0
        - echo "$REGISTRY_PASS" | docker login -u "$REGISTRY_USER" --password-stdin
      deploy:
        provider: script
        script: dcd -t master -V "$(git rev-parse --short HEAD)" -L "$IMAGE_NAME"
        on:
          branch: master
