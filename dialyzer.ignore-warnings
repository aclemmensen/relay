lib/envoy/api/v2/cds.pb.ex:213: Function fetch_clusters/2 has no local return
lib/envoy/api/v2/cds.pb.ex:213: Function fetch_clusters/3 has no local return
lib/envoy/api/v2/cds.pb.ex:213: The call 'Elixir.GRPC.Stub':call('Elixir.Envoy.Api.V2.ClusterDiscoveryService.Service',{'FetchClusters', {'Elixir.Envoy.Api.V2.DiscoveryRequest', 'false'}, {'Elixir.Envoy.Api.V2.DiscoveryResponse', 'false'}},#{#<47>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<110>(8, 1, 'integer', ['unsigned', 'big']), #<118>(8, 1, 'integer', ['unsigned', 'big']), #<111>(8, 1, 'integer', ['unsigned', 'big']), #<121>(8, 1, 'integer', ['unsigned', 'big']), #<46>(8, 1, 'integer', ['unsigned', 'big']), #<97>(8, 1, 'integer', ['unsigned', 'big']), #<112>(8, 1, 'integer', ['unsigned', 'big']), #<105>(8, 1, 'integer', ['unsigned', 'big']), #<46>(8, 1, 'integer', ['unsigned', 'big']), #<118>(8, 1, 'integer', ['unsigned', 'big']), #<50>(8, 1, 'integer', ['unsigned', 'big']), #<46>(8, 1, 'integer', ['unsigned', 'big']), #<67>(8, 1, 'integer', ['unsigned', 'big']), #<108>(8, 1, 'integer', ['unsigned', 'big']), #<117>(8, 1, 'integer', ['unsigned', 'big']), #<115>(8, 1, 'integer', ['unsigned', 'big']), #<116>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<114>(8, 1, 'integer', ['unsigned', 'big']), #<68>(8, 1, 'integer', ['unsigned', 'big']), #<105>(8, 1, 'integer', ['unsigned', 'big']), #<115>(8, 1, 'integer', ['unsigned', 'big']), #<99>(8, 1, 'integer', ['unsigned', 'big']), #<111>(8, 1, 'integer', ['unsigned', 'big']), #<118>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<114>(8, 1, 'integer', ['unsigned', 'big']), #<121>(8, 1, 'integer', ['unsigned', 'big']), #<83>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<114>(8, 1, 'integer', ['unsigned', 'big']), #<118>(8, 1, 'integer', ['unsigned', 'big']), #<105>(8, 1, 'integer', ['unsigned', 'big']), #<99>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<47>(8, 1, 'integer', ['unsigned', 'big']), #<70>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<116>(8, 1, 'integer', ['unsigned', 'big']), #<99>(8, 1, 'integer', ['unsigned', 'big']), #<104>(8, 1, 'integer', ['unsigned', 'big']), #<67>(8, 1, 'integer', ['unsigned', 'big']), #<108>(8, 1, 'integer', ['unsigned', 'big']), #<117>(8, 1, 'integer', ['unsigned', 'big']), #<115>(8, 1, 'integer', ['unsigned', 'big']), #<116>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<114>(8, 1, 'integer', ['unsigned', 'big']), #<115>(8, 1, 'integer', ['unsigned', 'big'])}#,_@1::any(),_@2::any(),_@3::any()) will never return since it differs in the 2nd argument from the success typing arguments: (any(),{_,{_,'true'},{_,boolean()}},binary(),#{'__struct__':='Elixir.GRPC.Channel', 'adapter':=atom(), 'host':=binary(), 'payload':=#{atom()=>_}, 'port':=non_neg_integer(), 'scheme':=binary()},any(),[{atom(),_}])
lib/envoy/api/v2/eds.pb.ex:35: Function fetch_endpoints/2 has no local return
lib/envoy/api/v2/eds.pb.ex:35: Function fetch_endpoints/3 has no local return
lib/envoy/api/v2/eds.pb.ex:35: The call 'Elixir.GRPC.Stub':call('Elixir.Envoy.Api.V2.EndpointDiscoveryService.Service',{'FetchEndpoints', {'Elixir.Envoy.Api.V2.DiscoveryRequest', 'false'}, {'Elixir.Envoy.Api.V2.DiscoveryResponse', 'false'}},#{#<47>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<110>(8, 1, 'integer', ['unsigned', 'big']), #<118>(8, 1, 'integer', ['unsigned', 'big']), #<111>(8, 1, 'integer', ['unsigned', 'big']), #<121>(8, 1, 'integer', ['unsigned', 'big']), #<46>(8, 1, 'integer', ['unsigned', 'big']), #<97>(8, 1, 'integer', ['unsigned', 'big']), #<112>(8, 1, 'integer', ['unsigned', 'big']), #<105>(8, 1, 'integer', ['unsigned', 'big']), #<46>(8, 1, 'integer', ['unsigned', 'big']), #<118>(8, 1, 'integer', ['unsigned', 'big']), #<50>(8, 1, 'integer', ['unsigned', 'big']), #<46>(8, 1, 'integer', ['unsigned', 'big']), #<69>(8, 1, 'integer', ['unsigned', 'big']), #<110>(8, 1, 'integer', ['unsigned', 'big']), #<100>(8, 1, 'integer', ['unsigned', 'big']), #<112>(8, 1, 'integer', ['unsigned', 'big']), #<111>(8, 1, 'integer', ['unsigned', 'big']), #<105>(8, 1, 'integer', ['unsigned', 'big']), #<110>(8, 1, 'integer', ['unsigned', 'big']), #<116>(8, 1, 'integer', ['unsigned', 'big']), #<68>(8, 1, 'integer', ['unsigned', 'big']), #<105>(8, 1, 'integer', ['unsigned', 'big']), #<115>(8, 1, 'integer', ['unsigned', 'big']), #<99>(8, 1, 'integer', ['unsigned', 'big']), #<111>(8, 1, 'integer', ['unsigned', 'big']), #<118>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<114>(8, 1, 'integer', ['unsigned', 'big']), #<121>(8, 1, 'integer', ['unsigned', 'big']), #<83>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<114>(8, 1, 'integer', ['unsigned', 'big']), #<118>(8, 1, 'integer', ['unsigned', 'big']), #<105>(8, 1, 'integer', ['unsigned', 'big']), #<99>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<47>(8, 1, 'integer', ['unsigned', 'big']), #<70>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<116>(8, 1, 'integer', ['unsigned', 'big']), #<99>(8, 1, 'integer', ['unsigned', 'big']), #<104>(8, 1, 'integer', ['unsigned', 'big']), #<69>(8, 1, 'integer', ['unsigned', 'big']), #<110>(8, 1, 'integer', ['unsigned', 'big']), #<100>(8, 1, 'integer', ['unsigned', 'big']), #<112>(8, 1, 'integer', ['unsigned', 'big']), #<111>(8, 1, 'integer', ['unsigned', 'big']), #<105>(8, 1, 'integer', ['unsigned', 'big']), #<110>(8, 1, 'integer', ['unsigned', 'big']), #<116>(8, 1, 'integer', ['unsigned', 'big']), #<115>(8, 1, 'integer', ['unsigned', 'big'])}#,_@1::any(),_@2::any(),_@3::any()) will never return since it differs in the 2nd argument from the success typing arguments: (any(),{_,{_,'true'},{_,boolean()}},binary(),#{'__struct__':='Elixir.GRPC.Channel', 'adapter':=atom(), 'host':=binary(), 'payload':=#{atom()=>_}, 'port':=non_neg_integer(), 'scheme':=binary()},any(),[{atom(),_}])
lib/envoy/api/v2/lds.pb.ex:54: Function fetch_listeners/2 has no local return
lib/envoy/api/v2/lds.pb.ex:54: Function fetch_listeners/3 has no local return
lib/envoy/api/v2/lds.pb.ex:54: The call 'Elixir.GRPC.Stub':call('Elixir.Envoy.Api.V2.ListenerDiscoveryService.Service',{'FetchListeners', {'Elixir.Envoy.Api.V2.DiscoveryRequest', 'false'}, {'Elixir.Envoy.Api.V2.DiscoveryResponse', 'false'}},#{#<47>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<110>(8, 1, 'integer', ['unsigned', 'big']), #<118>(8, 1, 'integer', ['unsigned', 'big']), #<111>(8, 1, 'integer', ['unsigned', 'big']), #<121>(8, 1, 'integer', ['unsigned', 'big']), #<46>(8, 1, 'integer', ['unsigned', 'big']), #<97>(8, 1, 'integer', ['unsigned', 'big']), #<112>(8, 1, 'integer', ['unsigned', 'big']), #<105>(8, 1, 'integer', ['unsigned', 'big']), #<46>(8, 1, 'integer', ['unsigned', 'big']), #<118>(8, 1, 'integer', ['unsigned', 'big']), #<50>(8, 1, 'integer', ['unsigned', 'big']), #<46>(8, 1, 'integer', ['unsigned', 'big']), #<76>(8, 1, 'integer', ['unsigned', 'big']), #<105>(8, 1, 'integer', ['unsigned', 'big']), #<115>(8, 1, 'integer', ['unsigned', 'big']), #<116>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<110>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<114>(8, 1, 'integer', ['unsigned', 'big']), #<68>(8, 1, 'integer', ['unsigned', 'big']), #<105>(8, 1, 'integer', ['unsigned', 'big']), #<115>(8, 1, 'integer', ['unsigned', 'big']), #<99>(8, 1, 'integer', ['unsigned', 'big']), #<111>(8, 1, 'integer', ['unsigned', 'big']), #<118>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<114>(8, 1, 'integer', ['unsigned', 'big']), #<121>(8, 1, 'integer', ['unsigned', 'big']), #<83>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<114>(8, 1, 'integer', ['unsigned', 'big']), #<118>(8, 1, 'integer', ['unsigned', 'big']), #<105>(8, 1, 'integer', ['unsigned', 'big']), #<99>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<47>(8, 1, 'integer', ['unsigned', 'big']), #<70>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<116>(8, 1, 'integer', ['unsigned', 'big']), #<99>(8, 1, 'integer', ['unsigned', 'big']), #<104>(8, 1, 'integer', ['unsigned', 'big']), #<76>(8, 1, 'integer', ['unsigned', 'big']), #<105>(8, 1, 'integer', ['unsigned', 'big']), #<115>(8, 1, 'integer', ['unsigned', 'big']), #<116>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<110>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<114>(8, 1, 'integer', ['unsigned', 'big']), #<115>(8, 1, 'integer', ['unsigned', 'big'])}#,_@1::any(),_@2::any(),_@3::any()) will never return since it differs in the 2nd argument from the success typing arguments: (any(),{_,{_,'true'},{_,boolean()}},binary(),#{'__struct__':='Elixir.GRPC.Channel', 'adapter':=atom(), 'host':=binary(), 'payload':=#{atom()=>_}, 'port':=non_neg_integer(), 'scheme':=binary()},any(),[{atom(),_}])
lib/envoy/api/v2/rds.pb.ex:32: Function fetch_routes/2 has no local return
lib/envoy/api/v2/rds.pb.ex:32: Function fetch_routes/3 has no local return
lib/envoy/api/v2/rds.pb.ex:32: The call 'Elixir.GRPC.Stub':call('Elixir.Envoy.Api.V2.RouteDiscoveryService.Service',{'FetchRoutes', {'Elixir.Envoy.Api.V2.DiscoveryRequest', 'false'}, {'Elixir.Envoy.Api.V2.DiscoveryResponse', 'false'}},#{#<47>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<110>(8, 1, 'integer', ['unsigned', 'big']), #<118>(8, 1, 'integer', ['unsigned', 'big']), #<111>(8, 1, 'integer', ['unsigned', 'big']), #<121>(8, 1, 'integer', ['unsigned', 'big']), #<46>(8, 1, 'integer', ['unsigned', 'big']), #<97>(8, 1, 'integer', ['unsigned', 'big']), #<112>(8, 1, 'integer', ['unsigned', 'big']), #<105>(8, 1, 'integer', ['unsigned', 'big']), #<46>(8, 1, 'integer', ['unsigned', 'big']), #<118>(8, 1, 'integer', ['unsigned', 'big']), #<50>(8, 1, 'integer', ['unsigned', 'big']), #<46>(8, 1, 'integer', ['unsigned', 'big']), #<82>(8, 1, 'integer', ['unsigned', 'big']), #<111>(8, 1, 'integer', ['unsigned', 'big']), #<117>(8, 1, 'integer', ['unsigned', 'big']), #<116>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<68>(8, 1, 'integer', ['unsigned', 'big']), #<105>(8, 1, 'integer', ['unsigned', 'big']), #<115>(8, 1, 'integer', ['unsigned', 'big']), #<99>(8, 1, 'integer', ['unsigned', 'big']), #<111>(8, 1, 'integer', ['unsigned', 'big']), #<118>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<114>(8, 1, 'integer', ['unsigned', 'big']), #<121>(8, 1, 'integer', ['unsigned', 'big']), #<83>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<114>(8, 1, 'integer', ['unsigned', 'big']), #<118>(8, 1, 'integer', ['unsigned', 'big']), #<105>(8, 1, 'integer', ['unsigned', 'big']), #<99>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<47>(8, 1, 'integer', ['unsigned', 'big']), #<70>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<116>(8, 1, 'integer', ['unsigned', 'big']), #<99>(8, 1, 'integer', ['unsigned', 'big']), #<104>(8, 1, 'integer', ['unsigned', 'big']), #<82>(8, 1, 'integer', ['unsigned', 'big']), #<111>(8, 1, 'integer', ['unsigned', 'big']), #<117>(8, 1, 'integer', ['unsigned', 'big']), #<116>(8, 1, 'integer', ['unsigned', 'big']), #<101>(8, 1, 'integer', ['unsigned', 'big']), #<115>(8, 1, 'integer', ['unsigned', 'big'])}#,_@1::any(),_@2::any(),_@3::any()) will never return since it differs in the 2nd argument from the success typing arguments: (any(),{_,{_,'true'},{_,boolean()}},binary(),#{'__struct__':='Elixir.GRPC.Channel', 'adapter':=atom(), 'host':=binary(), 'payload':=#{atom()=>_}, 'port':=non_neg_integer(), 'scheme':=binary()},any(),[{atom(),_}])